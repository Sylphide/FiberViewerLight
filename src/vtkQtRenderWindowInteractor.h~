/*=========================================================================

  Program:   FiberViewer
  Module:    $RCSfile: vtkQtRenderWindowInteractor.h,v $
  Language:  C++
  Date:      $Date: 2007/08/14 19:55:44 $
  Version:   $Revision: 1.1 $
  Author:    Matthieu Jomier

  Copyright (c) 2004 NeuroImaging Lab @ UNC. All rights reserved.
  See NeuroLibCopyright.txt for details.

     This software is distributed WITHOUT ANY WARRANTY; without even 
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
     PURPOSE.  See the above copyright notices for more information.

=========================================================================*/
  
#ifndef _vtkQtRenderWindowInteractor_h  
#define _vtkQtRenderWindowInteractor_h  
  
#include "vtkCommand.h"  
#include "vtkInteractorStyle.h"  
#include "vtkRenderWindowInteractor.h"  
#include <qobject.h>  
#include <qtimer.h>  
#include <qcursor.h>  
#include <qapplication.h>  
#include <QMouseEvent>

class vtkQtRenderWindow;
  
class vtkQtRenderWindowInteractor : public QObject, public vtkRenderWindowInteractor {  
  Q_OBJECT  
    friend class vtkQtRenderWindow;  
 public:  
  vtkTypeMacro(vtkQtRenderWindowInteractor, vtkRenderWindowInteractor);  
  vtkQtRenderWindowInteractor();  
  ~vtkQtRenderWindowInteractor();  
  static vtkQtRenderWindowInteractor *New(); // inline  
  void PrintSelf(ostream& os, vtkIndent indent);  
      
  void Start();  
      
  void SetRenderWindow(vtkQtRenderWindow*);  
      
  // timer methods  
  int CreateTimer(int timertype);  
  int DestroyTimer(void);  
      
  // own exit method   
  void ExitCallback(); // inline   
      
  protected slots:  
    void timer();  
 protected:  
  void mousePressEvent(QMouseEvent*);  
  void mouseReleaseEvent(QMouseEvent*);  
  void mouseMoveEvent(QMouseEvent*);  
  void keyPressEvent(QKeyEvent*);  
 private:  
  vtkQtRenderWindow *qtRenWin;  
  QTimer qTimer;  
};  
  
inline vtkQtRenderWindowInteractor *vtkQtRenderWindowInteractor::New() { return new vtkQtRenderWindowInteractor; }  
inline void vtkQtRenderWindowInteractor::ExitCallback()                { qApp->exit(); }  
  
#endif  
  
  
